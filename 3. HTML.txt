3. HTML
A. Create a basic calculator using HTML, CSS, and JavaScript with the functionality of add,
subtract, multiply and divide. Use the following picture for reference.

Ans:- 

Calculator.cmp

<aura:component implements="force:appHostable,flexipage:availableForAllPageTypes" access="global" >
	<aura:attribute name="lstNumbers" type="List" default="[]"/>
    <aura:attribute name="strOperator" type="String"/>
    <aura:attribute name="strCurrentNumber" type="String" default=""/>
    <aura:attribute name="strInput" type="String" default=""/>
    <aura:attribute name="result" type="Integer" default="0"/>
    
    <lightning:card title="Calculator">
        <div id="mainDiv" class="slds-p-around_medium">
            <div id="ioDiv">
                <div id="inputDiv">{!v.strInput}</div>
                <div id="outputDiv">{!v.result}</div>
            </div>
            <div id="operationsDiv">
                <table>
                    <tr>
                        <td onclick="{!c.numberClicked}">7</td>
                        <td onclick="{!c.numberClicked}">8</td>
                        <td onclick="{!c.numberClicked}">9</td>
                        <td class="operator" onclick="{!c.operatorClicked}">/</td>
                    </tr>
                    <tr>
                        <td onclick="{!c.numberClicked}">4</td>
                        <td onclick="{!c.numberClicked}">5</td>
                        <td onclick="{!c.numberClicked}">6</td>
                        <td class="operator" onclick="{!c.operatorClicked}">x</td>
                    </tr>
                    <tr>
                        <td onclick="{!c.numberClicked}">1</td>
                        <td onclick="{!c.numberClicked}">2</td>
                        <td onclick="{!c.numberClicked}">3</td>
                        <td class="operator" onclick="{!c.operatorClicked}">+</td>
                    </tr>
                    <tr>
                        <td onclick="{!c.numberClicked}">0</td>
                        <td onclick="{!c.clearClicked}">C</td>
                        <td onclick="{!c.calculate}">=</td>
                        <td class="operator" onclick="{!c.operatorClicked}">-</td>
                    </tr>
                </table>
            </div>
        </div>
    </lightning:card>
</aura:component>

--------------------------------------------------------------------

CalculatorController.js

({
	numberClicked : function(component, event, helper) {
        
        // Reset strInput and strOperator
        if(component.get("v.strOperator") === '='){
            component.set("v.strInput", "");
            component.set("v.strOperator", "NA");
        }
        
        // Get the clicked number and store it in strCurrentNumber
        let numClicked = event.target.innerText;
        component.set("v.strInput", component.get("v.strInput") + numClicked);
        let strCurrentNumber = component.get("v.strCurrentNumber");
        if(strCurrentNumber){
            component.set("v.strCurrentNumber", strCurrentNumber + numClicked);
        }else{
            component.set("v.strCurrentNumber", numClicked);
        }
	},
    
    calculate : function(component, event, helper) {
        let lstNumbers = component.get("v.lstNumbers");
        let result = 0;
        lstNumbers.push(Number(component.get("v.strCurrentNumber")));
        component.set("v.lstNumbers", lstNumbers);
        
        switch(component.get("v.strOperator")){
            case '+':
                for(let num of lstNumbers){
                    result = result + num;
                }
                break;
            case '-':
                result = lstNumbers[0];
                for(let i in lstNumbers){
                    if(i==0){
                        continue;
                    }
                    result = result - lstNumbers[i];
                }
                break;
            case '/':
                result = lstNumbers[0];
                for(let i in lstNumbers){
                    if(i==0){
                        continue;
                    }
                    result = result / lstNumbers[i];
                }
                break;
            case 'x':
                result = lstNumbers[0];
                for(let i in lstNumbers){
                    if(i==0){
                        continue;
                    }
                    result = result * lstNumbers[i];
                }
                break;
            default:
                component.set("v.result", 0);
                console.log("Invalid Operator");
        }
        component.set("v.result", result);
        component.set("v.lstNumbers", []);
        component.set("v.strCurrentNumber", "");
        component.set("v.strOperator", '=');
	},
    
    operatorClicked : function(component, event, helper) {
        let op = event.target.innerText;
        component.set("v.strInput", component.get("v.strInput") +' ' +op +' ');
        component.set("v.strOperator", op);
        
        let lstNumbers = component.get("v.lstNumbers");
        lstNumbers.push(Number(component.get("v.strCurrentNumber")));
        component.set("v.lstNumbers", lstNumbers);
        component.set("v.strCurrentNumber", "");
        
	},
    
    clearClicked : function(component, event, helper) {
        component.set("v.lstNumbers", []);
        component.set("v.strCurrentNumber", "");
        component.set("v.strInput", "");
		component.set("v.strOperator", "NA");
        component.set("v.result", 0);
	},
})

------------------------------------------------------------------------------------------

Calculator.css 


.THIS {
}
.THIS #ioDiv{
    text-align: right;
    background-color: black;
    color: white;
    height: 110px;
    padding-right: 20px;
    padding-top: 10px;
}
.THIS #inputDiv{
    font-size: 20px;
}
.THIS #outputDiv{
    font-size: 40px;
}
.THIS table{
    border-collapse: separate;
	border-spacing: 0px;
}
.THIS td{
    text-align: center;
    padding:20px 0px;
    font-size: 20px;
    background-color: #f2f0f1;
    border: 2px solid #ffffff;
    cursor: pointer;
    transition-property: border;
  	transition-duration: 0.3s;
  	transition-delay: 0s;
}
.THIS td:hover {
  border: 2px solid #8783eb;
}
.THIS .operator{
    background-color: #ab5eeb;
    color: white;
}

==============================================================================

B. Create a survey form with Fields; First Name, Last Name, Date of Birth, Country (dropdown),
Gender (checkbox), Profession, email, and mobile number. All the input fields are
necessary to submit the form. Create two buttons Submit and Reset. Reset will reset the
form while clicking on submit, first, it will check all the fields and necessary validations and
then a popup will appear displaying all the selected values with the label in front of it. On
closing the popup, the form should reset all the values. Use the following for reference

Ans:-

<h1 id="title"> Customer Survey Form </h1>
<form id="survey-form">

  <div class="form-control">
    <label for=" First name" id="label- First name">
     First  Name :
    </label>
    <input type="text" id="firstname" placeholder="Enter your first name" />
  </div>
<div class="form-control">
    <label for=" Last name" id="label- Last name">
      Last Name :
    </label>
    <input type="text" id="Lastname" placeholder="Enter yor last name" />
  </div>
  <div class="form-control">
    <label for="email" id="label-email">
      Email :
    </label>
    <input type="email" id="email" placeholder="Enter your email" />
  </div>
  <div class="form-control">
    <label for="Date of Birth" id="label-DOB">
      Date Of Birth :
    </label>
    <input type="date" id="DOB" placeholder="Enter your Death of birth" />
  </div>
 <div class="form-control">
    <label for=" Mobile Number" id="label-NM">
      Mobile Number :
    </label>
    <input type="number" id="NM" placeholder="Enter your Mobile Number" />
  </div>

  <div class="form-control">
    <label for="Country" id="label-Country">
     Country :
    </label>
    <select name="Country" id="Country">
      <option value="IND">IND</option>
      <option value="USA">USA</option>
      <option value="UK">UK</option>
      <option value="other">Other</option>
    </select>
  </div>
<div class="form-control">
    <label for=" Profession" id="label-Profession">
      Profession :
    </label>
    <input type="text" id="Profession" placeholder="Enter yor Profession" />
  </div>
 

  <div class="form-control">
    <label>Gender :</label>
    <br>
    <label for="inp-1">
      <input type="checkbox" name="inp">Male</input>
    </label>
    <br>
    <label for="inp-2">
      <input type="checkbox" name="inp">Female</input>
    </label>
    <br>
    <label for="inp-3">
      <input type="checkbox" name="inp">Other</input>
    </label>
  </div>

  <div class="button">
    <button  type="reset" value="reset" id="reset">
      Reset
    </button>
    <button  class="btn btn-success" type="submit" value="submit" id="submit">
      Submit
    </button>
 <div id="popup" class="hidden">
        <h2>Survey Form Data</h2>
        <ul id="popupData">
        </ul>
        <button type="button" id="closePopup">Close</button>
    </div>
  </div>
</form>


CSS FILE:  
*, *::before, *::after {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}
.bottom{
background-color: black;
width: 100%;
height: 100vh;
margin: auto;
}
.bottom > .mg{
margin: auto;
margin-top: 390px;
margin-left: 390px;
}
body {
  background-color: #1c1c1c;
  height: 100vh;
  display: flex;
  justify-content: center;
  align-items: center;
}

button {
  border: none;
  background-color: transparent;
}

.btn {
  padding: 10px 20px;
  border-width: 1px;
  border-style: solid;
  border-radius: 4px;
  transition: all 0.2s;
}
.btn:hover {
  cursor: pointer;
}

.btn-success {
  color: #0a2c12;
  border-color: #1e7e34;
  background-color: #28a745;
}
.btn-success:hover {
  background-color: #1e7e34;
  color: white;
}
.msg {
  position: fixed;
  top: 40px;
  left: 50%;
  padding: 10px 20px;
  border-radius: 5px;
  color: white;
  font-size: 14px;
  font-weight: 800;
  box-shadow: 0 0 14px rgba(0, 0, 0, 0.05);
}

.msg-success {
  background-color: #28a745;
}
.animate {
  opacity: 0;
  transition: all 1s;
  -webkit-animation-duration: 1s;
  animation-duration: 1s;
  -webkit-animation-fill-mode: both;
  animation-fill-mode: both;
}

.animate.active {
  opacity: 1;
  transform: translateX(-50%) translateY(-50%);
}

.slide-in-down {
  transform: translateY(-100%) translateX(-50%);
}


FUNCTION :
(function(){

    // data
    var clear;
    var msgDuration = 2000; // 2 seconds
    var $msgSuccess = '';


  var $msg        = $('.msg');
    var $btnSuccess = $('.btn-success');

 function render(message){

        hide();

        switch (message) {
            case 'success':
                $msg.addClass('msg-success active').text($msgSuccess);
                break;
}
function timer(){
        clearTimeout(clear);
        clear = setTimeout(function(){
            hide();
        }, msgDuration)
    }

    function hide(){
        $msg.removeClass('msg-success msg-danger msg-warning msg-info active');
    }

   
    $btnSuccess.on('click', function(){render('success');});
})();

 <script>
      
        document.getElementById("submitBtn").addEventListener("click", function() {
         
            const firstName = document.getElementById("firstName").value;
            const lastName = document.getElementById("lastName").value;
            const dob = document.getElementById("DOB").value;
            const country = document.getElementById("country").value;
            const gender = document.querySelectorAll('input[type=checkbox]:checked');
            const profession = document.getElementById("profession").value;
            const email = document.getElementById("email").value;
            const mobile = document.getElementById("mobile").value;

            const popupData = document.getElementById("popupData");
            popupData.innerHTML = `
                <li><strong>First Name:</strong> ${firstName}</li>
                <li><strong>Last Name:</strong> ${lastName}</li>
                <li><strong>Date of Birth:</strong> ${DOB}</li>
                <li><strong>Country:</strong> ${country}</li>
                <li><strong>Gender:</strong> ${[...gender].map(checkbox => checkbox.nextSibling.nodeValue).join(", ")}</li>
                <li><strong>Profession:</strong> ${profession}</li>
                <li><strong>Email:</strong> ${email}</li>
                <li><strong>Mobile Number:</strong> ${mobile}</li>
            `;
            document.getElementById("popup").classList.remove("hidden");
        });

       
        document.getElementById("resetBtn").addEventListener("click", function() {
            document.getElementById("surveyForm").reset();
        });

   
        document.getElementById("closePopup").addEventListener("click", function() {
            document.getElementById("popup").classList.add("hidden");
        });
    </script>









